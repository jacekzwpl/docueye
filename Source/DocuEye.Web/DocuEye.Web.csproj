<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <Nullable>enable</Nullable>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <ImplicitUsings>enable</ImplicitUsings>
    <UserSecretsId>bb0998bf-f98d-4cb7-afd4-e64e36ead92e</UserSecretsId>
    <DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>
    <DockerfileContext>..\..</DockerfileContext>
    <SpaRoot>client-app\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
    <SpaProxyServerUrl>https://localhost:3000</SpaProxyServerUrl>
    <SpaProxyLaunchCommand>yarn start</SpaProxyLaunchCommand>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.VisualStudio.Azure.Containers.Tools.Targets" Version="1.21.0" />
    <PackageReference Include="Microsoft.AspNetCore.SpaProxy" Version="8.0.6" />
    <PackageReference Include="Swashbuckle.AspNetCore" Version="6.6.2" />
  </ItemGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Content Remove="$(SpaRoot)**" />
    <None Remove="$(SpaRoot)**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\DocuEye.ChangeTracker.Api\DocuEye.ChangeTracker.Api.csproj" />
    <ProjectReference Include="..\DocuEye.ChangeTracker.Persistence\DocuEye.ChangeTracker.Persistence.csproj" />
    <ProjectReference Include="..\DocuEye.DocsKeeper.Api\DocuEye.DocsKeeper.Api.csproj" />
    <ProjectReference Include="..\DocuEye.Infrastructure.Authentication\DocuEye.Infrastructure.Authentication.csproj" />
    <ProjectReference Include="..\DocuEye.Infrastructure.DataProtection\DocuEye.Infrastructure.DataProtection.csproj" />
    <ProjectReference Include="..\DocuEye.ModelKeeper.Api\DocuEye.ModelKeeper.Api.csproj" />
    <ProjectReference Include="..\DocuEye.Persistence\DocuEye.Persistence.csproj" />
    <ProjectReference Include="..\DocuEye.ViewsKeeper.Api\DocuEye.ViewsKeeper.Api.csproj" />
    <ProjectReference Include="..\DocuEye.WorkspaceImporter.Api\DocuEye.WorkspaceImporter.Api.csproj" />
    <ProjectReference Include="..\DocuEye.WorkspacesKeeper.Api\DocuEye.WorkspacesKeeper.Api.csproj" />
  </ItemGroup>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'yarn'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="yarn install" />
  </Target>


<!--
  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish"> -->
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
  <!--  <Exec WorkingDirectory="$(SpaRoot)" Command="yarn install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="yarn build" /> -->

    <!-- Include the newly-built files in the publish output -->
  <!--  <ItemGroup>
      <DistFiles Include="$(SpaRoot)build\**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>wwwroot\%(RecursiveDir)%(FileName)%(Extension)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target> -->

</Project>
